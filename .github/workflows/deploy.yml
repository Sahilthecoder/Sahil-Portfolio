name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      
      - name: Remove temp-portfolio to prevent conflicts
        run: |
          echo "Removing temp-portfolio directory to prevent version conflicts"
          rm -rf temp-portfolio
          
      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps
          npm list --depth=0
          
      - name: Debug - List files
        run: |
          echo "Current directory structure:"
          ls -la
          echo -e "\nNode version:"
          node -v
          echo -e "\nNPM version:"
          npm -v
          echo -e "\nVite version:"
          npx vite --version
      
      - name: Build
        run: |
          set -e
          echo "Starting build with VITE_BASE_URL='/Sahil-Portfolio/'"
          VITE_BASE_URL='/Sahil-Portfolio/' npm run build --if-present || (echo "Build failed. Check logs above for error details." && exit 1)
          
          echo -e "\nBuild completed. Contents of dist directory:"
          ls -la dist/
          
          # Create .nojekyll to bypass Jekyll processing
          touch ./dist/.nojekyll
          # Create _redirects for SPA routing
          echo '/* /index.html 200' > ./dist/_redirects
          
          echo -e "\nAfter adding deployment files:"
          ls -la dist/
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: "vite"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
    
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
